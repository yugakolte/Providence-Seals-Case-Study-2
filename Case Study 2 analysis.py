# -*- coding: utf-8 -*-
"""
Created on Tue Nov 2 23:43:58 2021

@author: sbgadhwa
"""

import csv, math
import pandas as pd
import numpy as np

fileP = r"B:\Shyam\ISE 552\ProvidenceSealsData.csv"

machines = ["100", "101", "103", "104", "105", "200", "201", "202", "203", "300", "302"]
mNumbers = {"100":2, "101":2, "103":1, "104":2, "105":2, "200":1, "201":1, "202":1, "203":1, "300":1, "302":1}


totalOrders = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


probabilityMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


probForEachMachine = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


timeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]

#totalorders = [o1, o2, o3, o4, o5, o6 o7, o8, o9, o10, o11, o12, o13, o14, o15, o16, o17, o18, o19, o20, o21, o22, o23, o24, o25, o26, o27, o28, o29, o30]

def cycleTime(u, m, t, c):
    c1 = 2*(m+1)
    c2 = math.sqrt(c1)-1
    u1 = u**(c2)
    u2 = m*(1-u)
    uterm = u1/u2
   
    returnTerm = ((c+1)/2)*uterm*t + t
    return returnTerm

def cycleTimeForCell(u, m, te, c, s, t, k):
    c1 = 2*(m+1)
    c2 = math.sqrt(c1)-1
    u1 = u**(c2)
    u2 = m*(1-u)
    uterm = u1/u2
   
    returnTerm = ((c+1)/2)*uterm*te + s/k + t*(k+1)/(2*k)
    return returnTerm

def effProcTime(k, t, s):
    return (t + s/k)



mUtilization = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
mDirectUtil = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}

mHours = {"100" : 8000, "101" : 8000, "103" : 4000, "104" : 8000, "105" : 8000, "200" : 4000, "201" : 4000, "202" : 4000, "203" : 4000, "300" : 4000, "302" : 4000}


sumArrival = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
sumTotalIncidentForProb = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            sumArrival[str(int(float(i[5])))] =  sumArrival[str(int(float(i[5])))] + float(i[2])
       
       
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            j = str(int(float(i[5])))
            probabilityMatrix[int(i[0])-1][j] = probabilityMatrix[int(i[0])-1][j] + float(i[2])/sumArrival[j]

#for i in range(0, len(probabilityMatrix)):
#   print(f"Order {i+1} : {probabilityMatrix[i]} \n")

print("\n------------------------------Probability of each order arriving (1st Operation) on a particular machine is as represented in table below------------------------------\n")
trialDfa = pd.DataFrame(probabilityMatrix)
ordersA = list(range(1, 31))
trialDfa['Order'] = ordersA
trialDfa.insert(0, 'Order', trialDfa.pop('Order'))
trialDfa.set_index(['Order'])
pd.set_option('display.max_columns', None)
pd.set_option('display.width', 1000)

print(trialDfa)
#trialDfa.to_excel("Q1) Prob_of_arrival.xlsx")
print("\n")





with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            sumTotalIncidentForProb[str(int(float(i[5])))] =  sumTotalIncidentForProb[str(int(float(i[5])))] + float(i[2])
            
        if i[10]!='' and str(int(float(i[5]))) in machines:
            sumTotalIncidentForProb[str(int(float(i[10])))] =  sumTotalIncidentForProb[str(int(float(i[10])))] + float(i[2])
            
        if i[15]!='' and str(int(float(i[15]))) in machines:
            sumTotalIncidentForProb[str(int(float(i[15])))] =  sumTotalIncidentForProb[str(int(float(i[15])))] + float(i[2])
            
        if i[20]!='' and str(int(float(i[20]))) in machines:
            sumTotalIncidentForProb[str(int(float(i[20])))] =  sumTotalIncidentForProb[str(int(float(i[20])))] + float(i[2])
       

with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            j = str(int(float(i[5])))
            probForEachMachine[int(i[0])-1][j] = probForEachMachine[int(i[0])-1][j] + float(i[2])/sumTotalIncidentForProb[j]
            
        if i[10]!='' and str(int(float(i[10]))) in machines:
            j = str(int(float(i[10])))
            probForEachMachine[int(i[0])-1][j] = probForEachMachine[int(i[0])-1][j] + float(i[2])/sumTotalIncidentForProb[j]
            
        if i[15]!='' and str(int(float(i[15]))) in machines:
            j = str(int(float(i[15])))
            probForEachMachine[int(i[0])-1][j] = probForEachMachine[int(i[0])-1][j] + float(i[2])/sumTotalIncidentForProb[j]
            
        if i[20]!='' and str(int(float(i[20]))) in machines:
            j = str(int(float(i[20])))
            probForEachMachine[int(i[0])-1][j] = probForEachMachine[int(i[0])-1][j] + float(i[2])/sumTotalIncidentForProb[j]


print("\n------------------------------Probability of each order visiting a machine is as represented in table below------------------------------\n")
trialDfaa = pd.DataFrame(probForEachMachine)
ordersA = list(range(1, 31))
trialDfaa['Order'] = ordersA
trialDfaa.insert(0, 'Order', trialDfaa.pop('Order'))
trialDfaa.set_index(['Order'])
pd.set_option('display.max_columns', None)
pd.set_option('display.width', 1000)

print(trialDfaa)
#trialDfaa.to_excel("Q1) Prob_of_each_part_on_each_machine.xlsx")

print("\n")

for i in machines:
    for j in probForEachMachine:
        j[i] = j[i]/mNumbers[i]




print("\n------------------------------Probability of each order visiting one of each machine is as represented in table below (This value to be used to multiply te with)------------------------------\n")
trialDfaa2 = pd.DataFrame(probForEachMachine)
ordersA = list(range(1, 31))
trialDfaa2['Order'] = ordersA
trialDfaa2.insert(0, 'Order', trialDfaa2.pop('Order'))
trialDfaa2.set_index(['Order'])
pd.set_option('display.max_columns', None)
pd.set_option('display.width', 1000)
print(trialDfaa2)
print("\n")


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            j = str(int(float(i[5])))
            timeMatrix[int(i[0])-1][j] = timeMatrix[int(i[0])-1][j] + effProcTime(float(i[3]), float(i[7]), float(i[6]))*probForEachMachine[int(i[0])-1][j]
           
           
        if i[10]!='' and str(int(float(i[10]))) in machines:
            j = str(int(float(i[10])))
            timeMatrix[int(i[0])-1][j] = timeMatrix[int(i[0])-1][j] + effProcTime(float(i[3]), float(i[12]), float(i[11]))*probForEachMachine[int(i[0])-1][j]
           
        if i[15]!='' and str(int(float(i[15]))) in machines:
            j = str(int(float(i[15])))
            timeMatrix[int(i[0])-1][j] = timeMatrix[int(i[0])-1][j] + effProcTime(float(i[3]), float(i[17]), float(i[16]))*probForEachMachine[int(i[0])-1][j]
           
        if i[20]!='' and str(int(float(i[20]))) in machines:
            j = str(int(float(i[20])))
            timeMatrix[int(i[0])-1][j] = timeMatrix[int(i[0])-1][j] + effProcTime(float(i[3]), float(i[22]), float(i[21]))*probForEachMachine[int(i[0])-1][j]
         
   
   
print("\n------------------------------Each Order's effective processing time (in hours/unit) at each machine represented in table below------------------------------\n")
trialDfb = pd.DataFrame(timeMatrix)
ordersB = list(range(1, 31))
trialDfb['Order'] = ordersB
trialDfb.insert(0, 'Order', trialDfb.pop('Order'))
trialDfb.set_index(['Order'])
print(trialDfb)
#trialDfb.to_excel("Q1) Weighted_Effective_processing_time.xlsx")


totalTeForMachines = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
meanTeForMachines = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
varTeForMachines = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}


print("\n-----------------------------Total processing time for each machine---------------------------\n")


for i in trialDfb:
    totalTeForMachines[i] = trialDfb[trialDfb[i]>0][i].sum()

totalTeForMachines.pop('Order')
print("\nTo make 1 unit of each of the orders : ")
for i in totalTeForMachines:
    print(f"Total processing time for machine {i} is : {totalTeForMachines[i]} hours/unit")


print("\n-----------------------------Mean effective processing time for each machine (hours/unit)---------------------------\n")


for i in trialDfb:
    meanTeForMachines[i] = trialDfb[trialDfb[i]>0][i].mean()

meanTeForMachines.pop('Order')
for i in meanTeForMachines:
    print(f"Te for {i} : {meanTeForMachines[i]}")
print("\n\n")

print("\n-----------------------------Variance of effective processing time for each machine (hours/unit)---------------------------\n")

for i in trialDfb:
    varTeForMachines[i] = trialDfb[trialDfb[i]>0][i].var()

varTeForMachines.pop('Order')
for i in varTeForMachines:
    if str(varTeForMachines[i]) == "nan":
        varTeForMachines[i] = 0
    print(f"Sigma2E for {i} : {varTeForMachines[i]}")
print("\n\n")



print("\n------------------------------Ce squared Values for each machine------------------------------\n")

ce2Vals = dict((k, varTeForMachines[k] / meanTeForMachines[k]**2) for k in meanTeForMachines)

for i in ce2Vals:
    print(f"Ce2 for machine {i} : {ce2Vals[i]}")
print("\n\n")


print("\n------------------------------Utilization------------------------------\n")
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!="":
            if str(int(float(i[5]))) in mUtilization:
                j = str(int(float(i[5])))
                mUtilization[j] = mUtilization[j] + float(i[8])
       
        if i[10]!="":
            if str(int(float(i[10]))) in mUtilization:
                j = str(int(float(i[10])))
                mUtilization[j] = mUtilization[j] + float(i[13])
               
        if i[15]!="":
            if str(int(float(i[15]))) in mUtilization:
                j = str(int(float(i[15])))
                mUtilization[j] = mUtilization[j] + float(i[18])
               
        if i[20]!="":
            if str(int(float(i[20]))) in mUtilization:
                j = str(int(float(i[20])))
                mUtilization[j] = mUtilization[j] + float(i[23])

utilValues = dict((k, (mUtilization[k]) / mHours[k]) for k in mHours)

for i in mUtilization:
    print(f"Load on machine {i} : {mUtilization[i]} ")
print("\n\n")    

for i in utilValues:
    print(f"Net Utilzation of machine {i} : {utilValues[i]}")
print("\n\n")


#print("\n------------------------------1c) Direct Utilization------------------------------\n")
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!="":
            if str(int(float(i[5]))) in mDirectUtil:
                j = str(int(float(i[5])))
                mDirectUtil[j] = mDirectUtil[j] + (float(i[4])*(float(i[3])*float(i[7]) + float(i[6]))/float(i[3]))
       
        if i[10]!="":
            if str(int(float(i[10]))) in mDirectUtil:
                j = str(int(float(i[10])))
                mDirectUtil[j] = mDirectUtil[j] + (float(i[4])*(float(i[3])*float(i[12]) + float(i[11]))/float(i[3]))
               
        if i[15]!="":
            if str(int(float(i[15]))) in mDirectUtil:
                j = str(int(float(i[15])))
                mDirectUtil[j] = mDirectUtil[j] + (float(i[4])*(float(i[3])*float(i[17]) + float(i[16]))/float(i[3]))
               
        if i[20]!="":
            if str(int(float(i[20]))) in mDirectUtil:
                j = str(int(float(i[20])))
                mDirectUtil[j] = mDirectUtil[j] + (float(i[4])*(float(i[3])*float(i[22]) + float(i[21]))/float(i[3]))


directFinalUtil = dict((k, (mDirectUtil[k]) / mNumbers[k]) for k in mHours)
#for i in directFinalUtil:
#    print(f"{i} : {directFinalUtil[i]}")


print("\n\n")
mSetupUtil = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}

print("\n------------------------------Setup Utilization------------------------------\n")
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!="":
            if str(int(float(i[5]))) in mSetupUtil:
                j = str(int(float(i[5])))
                mSetupUtil[j] = mSetupUtil[j] + (float(i[4])*(float(i[6]))/float(i[3]))
       
        if i[10]!="":
            if str(int(float(i[10]))) in mSetupUtil:
                j = str(int(float(i[10])))
                mSetupUtil[j] = mSetupUtil[j] + (float(i[4])*(float(i[11]))/float(i[3]))
               
        if i[15]!="":
            if str(int(float(i[15]))) in mSetupUtil:
                j = str(int(float(i[15])))
                mSetupUtil[j] = mSetupUtil[j] + (float(i[4])*(float(i[16]))/float(i[3]))
               
        if i[20]!="":
            if str(int(float(i[20]))) in mSetupUtil:
                j = str(int(float(i[20])))
                mSetupUtil[j] = mSetupUtil[j] + (float(i[4])*(float(i[21]))/float(i[3]))


mActualSetupUtil = dict((k, (mSetupUtil[k]) / mNumbers[k]) for k in mHours)
mFinalSetupRatio = dict((k, (mActualSetupUtil[k]) / directFinalUtil[k]) for k in mActualSetupUtil.keys())

for i in mFinalSetupRatio:
    print(f"Setup percentange for {i} : {100*mFinalSetupRatio[i]} %")
print("\n\n")


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[5]!='' and str(int(float(i[5]))) in machines:
            j = str(int(float(i[5])))
            #print("order : ", int(i[0]))
            #print("On machine : ", j)
            totalOrders[int(i[0])-1][j] = totalOrders[int(i[0])-1][j] + cycleTime(utilValues[j], mNumbers[j], meanTeForMachines[j], ce2Vals[j])
           
           
        if i[10]!='' and str(int(float(i[10]))) in machines:
            j = str(int(float(i[10])))
            totalOrders[int(i[0])-1][j] = totalOrders[int(i[0])-1][j] + cycleTime(utilValues[j], mNumbers[j], meanTeForMachines[j], ce2Vals[j])
           
        if i[15]!='' and str(int(float(i[15]))) in machines:
            j = str(int(float(i[15])))
            totalOrders[int(i[0])-1][j] = totalOrders[int(i[0])-1][j] + cycleTime(utilValues[j], mNumbers[j], meanTeForMachines[j], ce2Vals[j])
           
        if i[20]!='' and str(int(float(i[20]))) in machines:
            j = str(int(float(i[20])))
            totalOrders[int(i[0])-1][j] = totalOrders[int(i[0])-1][j] + cycleTime(utilValues[j], mNumbers[j], meanTeForMachines[j], ce2Vals[j])
         
   
#for i in range(0, len(totalOrders)):
#   print(f"Order {i+1} : {totalOrders[i]} \n")
   
print("\n------------------------------Each Order's cycle time at each machine represented in table below (in hours/unit)------------------------------\n")
trialDf = pd.DataFrame(totalOrders)
ordersC = list(range(1, 31))
trialDf['Order'] = ordersC
trialDf.insert(0, 'Order', trialDf.pop('Order'))
trialDf.set_index(['Order'])
print(trialDf)
#trialDf.to_excel("Q1) Each_Orders_cycle_time.xlsx")


def getMaxSetupTimeForOrder(m1, m1v, m2, m2v, m3, m3v, m4, m4v):
    setupTimeValues = {}
    if m1 != '' and float(m1v) > 0.0:
        if m1 not in setupTimeValues:
            setupTimeValues[m1] = float(m1v)
        else:
            if float(m1v) > setupTimeValues[m1]:
                setupTimeValues[m1] = float(m1v)
                
    if m2 != '' and float(m2v) > 0.0:
        if m2 not in setupTimeValues:
            setupTimeValues[m2] = float(m2v)
        else:
            if float(m2v) > setupTimeValues[m2]:
                setupTimeValues[m2] = float(m2v)
                
    if m3 != '' and float(m3v) > 0.0:
        if m3 not in setupTimeValues:
            setupTimeValues[m3] = float(m3v)
        else:
            if float(m3v) > setupTimeValues[m3]:
                setupTimeValues[m3] = float(m3v)
                
    if m4 != '' and float(m4v) > 0.0:
        if m4 not in setupTimeValues:
            setupTimeValues[m4] = float(m4v)
        else:
            if float(m4v) > setupTimeValues[m4]:
                setupTimeValues[m4] = float(m4v)
    #print(setupTimeValues)            
    return max(list(setupTimeValues.values()))
                
                
                



cluster1Orders = [7,2,5,6,9,12,13,15,16,24,25,30,14,23,1,11,21]
cluster1Machines = ["100", "101"]
cluster1MachineHours = {"100" : 8000, "101" : 8000}
cluster1Load = {"100" : 0, "101" : 0}
cluster1SetupTimes = {"100" : 0, "101" : 0}
cluster1SetupTime = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
maxSetupTimeC1 = 0


cluster1Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


setup1Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


cluster2Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


setup2Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]



cluster3Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


setup3Q3Matrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


newMachineUtilization = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}


print(f"\n------------------------------ Cluster 1 Machine's Utilization ({cluster1Machines})------------------------------\n")

with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster1Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                #print(f"For order {j}, the setup time is : {maxSetupForOrder}")
                
                if i[5] != '' and str(int(float(i[5]))) in cluster1Machines:
                    cluster1Q3Matrix[j-1][str(int(float(i[5])))] = cluster1Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(float(i[3])*float(i[7]) + maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                    
                if i[10] != '' and str(int(float(i[10]))) in cluster1Machines:
                    cluster1Q3Matrix[j-1][str(int(float(i[10])))] = cluster1Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(float(i[3])*float(i[12])))/float(i[3])/mNumbers[str(int(float(i[10])))])
                    
                if i[5] != '' and str(int(float(i[15]))) in cluster1Machines:
                    cluster1Q3Matrix[j-1][str(int(float(i[15])))] = cluster1Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(float(i[3])*float(i[17])))/float(i[3])/mNumbers[str(int(float(i[15])))])
                    
                if i[20] != '' and str(int(float(i[20]))) in cluster1Machines:
                    cluster1Q3Matrix[j-1][str(int(float(i[20])))] = cluster1Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(float(i[3])*float(i[22])))/float(i[3])/mNumbers[str(int(float(i[20])))])




trialDfQ3 = pd.DataFrame(cluster1Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ3['Order'] = ordersC
trialDfQ3.insert(0, 'Order', trialDfQ3.pop('Order'))
trialDfQ3.set_index(['Order'])
print(trialDfQ3)
#trialDfQ3.to_excel("Q3) Cluster_1_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ3:
    if trialDfQ3[i].sum()>0 and i!='Order':
        print(f"The utilization of machine {i} is : {trialDfQ3[i].sum()}")
        newMachineUtilization[i] = trialDfQ3[i].sum()
        
print("\n\n")       
        
        
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster1Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                
                if i[5] != '' and str(int(float(i[5]))) in cluster1Machines:
                    setup1Q3Matrix[j-1][str(int(float(i[5])))] = setup1Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                  
                if i[10] != '' and str(int(float(i[10]))) in cluster1Machines:
                    setup1Q3Matrix[j-1][str(int(float(i[10])))] = setup1Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[10])))])
                    
                if i[15] != '' and str(int(float(i[15]))) in cluster1Machines:
                    setup1Q3Matrix[j-1][str(int(float(i[15])))] = setup1Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[15])))])
            
                if i[20] != '' and str(int(float(i[20]))) in cluster1Machines:
                    setup1Q3Matrix[j-1][str(int(float(i[20])))] = setup1Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[20])))])
                


print("\n----------------------------------------------------Setup Time Utilization for cluster 1 machines-------------------------------------------\n")

trialDfQ31s = pd.DataFrame(setup1Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ31s['Order'] = ordersC
trialDfQ31s.insert(0, 'Order', trialDfQ31s.pop('Order'))
trialDfQ31s.set_index(['Order'])
print(trialDfQ31s)
#trialDfQ31s.to_excel("Q3) Cluster_1_setup_percent_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ31s:
    if trialDfQ31s[i].sum()>0 and i!='Order':
        print(f"The utilization of machine due to setup at {i} is : {100*trialDfQ31s[i].sum()} %")











cluster2Orders = [26, 18, 29, 19, 3, 10, 17, 8, 28, 4, 23]
cluster2Machines = ["202", "300", "105", "104", "200", "302", "201"]
cluster2MachineHours = {"202" : 4000, "300" : 4000, "105" : 8000, "104" : 8000, "200" : 4000,"201" : 4000, "302" : 4000}
cluster2Load = {"202" : 0, "300" : 0, "105" : 0, "104" : 0, "200" : 0, "302" : 0}
cluster2SetupTime = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
maxSetupTimeC2 = 0










print(f"\n------------------------------Cluster 2 Machine's Utilization ({cluster2Machines})------------------------------\n")

with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster2Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                #print(f"For order {j}, the setup time is : {maxSetupForOrder}")
                
                if i[5] != '' and str(int(float(i[5]))) in cluster2Machines:
                    cluster2Q3Matrix[j-1][str(int(float(i[5])))] = cluster2Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(float(i[3])*float(i[7]) + maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                    
                if i[10] != '' and str(int(float(i[10]))) in cluster2Machines:
                    cluster2Q3Matrix[j-1][str(int(float(i[10])))] = cluster2Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(float(i[3])*float(i[12])))/float(i[3])/mNumbers[str(int(float(i[10])))])
                    
                if i[5] != '' and str(int(float(i[15]))) in cluster2Machines:
                    cluster2Q3Matrix[j-1][str(int(float(i[15])))] = cluster2Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(float(i[3])*float(i[17])))/float(i[3])/mNumbers[str(int(float(i[15])))])
                    
                if i[20] != '' and str(int(float(i[20]))) in cluster2Machines:
                    cluster2Q3Matrix[j-1][str(int(float(i[20])))] = cluster2Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(float(i[3])*float(i[22])))/float(i[3])/mNumbers[str(int(float(i[20])))])



trialDfQ3b = pd.DataFrame(cluster2Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ3b['Order'] = ordersC
trialDfQ3b.insert(0, 'Order', trialDfQ3b.pop('Order'))
trialDfQ3b.set_index(['Order'])
print(trialDfQ3b)
#trialDfQ3b.to_excel("Q3) Cluster_2_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ3b:
    if trialDfQ3b[i].sum()>0 and i!='Order':
        print(f"The utilization of machine {i} is : {trialDfQ3b[i].sum()}")
        newMachineUtilization[i] = trialDfQ3b[i].sum()
        
print("\n\n")       
        
        
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster2Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                
                if i[5] != '' and str(int(float(i[5]))) in cluster2Machines:
                    setup2Q3Matrix[j-1][str(int(float(i[5])))] = setup2Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                        
                if i[10] != '' and str(int(float(i[10]))) in cluster2Machines:
                    setup2Q3Matrix[j-1][str(int(float(i[10])))] = setup2Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[10])))])

                if i[15] != '' and str(int(float(i[15]))) in cluster2Machines:
                    setup2Q3Matrix[j-1][str(int(float(i[15])))] = setup2Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[15])))])

                if i[20] != '' and str(int(float(i[20]))) in cluster2Machines:
                    setup2Q3Matrix[j-1][str(int(float(i[20])))] = setup2Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[20])))])



print("\n----------------------------------------------------Setup Time Utilization for cluster 2 machines-------------------------------------------\n")
trialDfQ32s = pd.DataFrame(setup2Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ32s['Order'] = ordersC
trialDfQ32s.insert(0, 'Order', trialDfQ32s.pop('Order'))
trialDfQ32s.set_index(['Order'])
print(trialDfQ32s)
#trialDfQ32s.to_excel("Q3) Cluster_2_setup_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ32s:
    if trialDfQ32s[i].sum()>0 and i!='Order':
        print(f"The utilization of machine due to setup at {i} is : {100*trialDfQ32s[i].sum()} %")








cluster3Orders = [22, 27, 20]
cluster3Machines = ["103", "203"]
cluster3MachineHours = {"103" : 4000, "203" : 4000}
cluster3Load =  {"103" : 0, "203" : 0}
cluster3SetupTime = {"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}
maxSetupTimeC3 = 0








print(f"\n------------------------------Cluster 3 Machine's Utilization ({cluster3Machines})------------------------------\n")

with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster3Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                print(f"For order {j}, the setup time is : {maxSetupForOrder}")
                
                if i[5] != '' and str(int(float(i[5]))) in cluster3Machines:
                    cluster3Q3Matrix[j-1][str(int(float(i[5])))] = cluster3Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(float(i[3])*float(i[7]) + maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                    
                if i[10] != '' and str(int(float(i[10]))) in cluster3Machines:
                    cluster3Q3Matrix[j-1][str(int(float(i[10])))] = cluster3Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(float(i[3])*float(i[12])))/float(i[3])/mNumbers[str(int(float(i[10])))])
                    
                if i[5] != '' and str(int(float(i[15]))) in cluster3Machines:
                    cluster3Q3Matrix[j-1][str(int(float(i[15])))] = cluster3Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(float(i[3])*float(i[17])))/float(i[3])/mNumbers[str(int(float(i[15])))])
                    
                if i[20] != '' and str(int(float(i[20]))) in cluster3Machines:
                    cluster3Q3Matrix[j-1][str(int(float(i[20])))] = cluster3Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(float(i[3])*float(i[22])))/float(i[3])/mNumbers[str(int(float(i[20])))])




trialDfQ3c = pd.DataFrame(cluster3Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ3c['Order'] = ordersC
trialDfQ3c.insert(0, 'Order', trialDfQ3c.pop('Order'))
trialDfQ3c.set_index(['Order'])
print(trialDfQ3c)
#trialDfQ3c.to_excel("Q3) Cluster_3_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ3c:
    if trialDfQ3c[i].sum()>0 and i!='Order':
        print(f"The utilization of machine {i} is : {trialDfQ3c[i].sum()}")
        newMachineUtilization[i] = trialDfQ3c[i].sum()
        
print("\n\n")       
        
        
with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0])>0:
            j = int(i[0])
            if j in cluster3Orders:
                maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
                
                if i[5] != '' and str(int(float(i[5]))) in cluster3Machines:
                    setup3Q3Matrix[j-1][str(int(float(i[5])))] = setup3Q3Matrix[j-1][str(int(float(i[5])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[5])))])
                    
                if i[10] != '' and str(int(float(i[10]))) in cluster3Machines:
                    setup3Q3Matrix[j-1][str(int(float(i[10])))] = setup3Q3Matrix[j-1][str(int(float(i[10])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[10])))])
                    
                if i[15] != '' and str(int(float(i[15]))) in cluster3Machines:
                    setup3Q3Matrix[j-1][str(int(float(i[15])))] = setup3Q3Matrix[j-1][str(int(float(i[15])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[15])))])
                    
                if i[20] != '' and str(int(float(i[20]))) in cluster3Machines:
                    setup3Q3Matrix[j-1][str(int(float(i[20])))] = setup3Q3Matrix[j-1][str(int(float(i[20])))] + ((float(i[4])*(maxSetupForOrder))/float(i[3])/mNumbers[str(int(float(i[20])))])
                    
                

print("\n----------------------------------------------------Setup Time Utilization for cluster 3 machines-------------------------------------------\n")
trialDfQ33s = pd.DataFrame(setup3Q3Matrix)
ordersC = list(range(1, 31))
trialDfQ33s['Order'] = ordersC
trialDfQ33s.insert(0, 'Order', trialDfQ33s.pop('Order'))
trialDfQ33s.set_index(['Order'])
print(trialDfQ33s)
#trialDfQ33s.to_excel("Q3) Cluster_3_setup_machine_utilization.xlsx")

print("\n\n")
for i in trialDfQ33s:
    if trialDfQ33s[i].sum()>0 and i!='Order':
        print(f"The utilization of machine due to setup at {i} is : {100*trialDfQ33s[i].sum()} %")









print("\n\n")

cluster1EffTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]



with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0]) in cluster1Orders:
            j = int(i[0])
            maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
            if i[5]!='' and str(int(float(i[5]))) in cluster1Machines:
                k = str(int(float(i[5])))
                cluster1EffTimeMatrix[j-1][k] = cluster1EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[7]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[10]!='' and str(int(float(i[10]))) in cluster1Machines:
                k = str(int(float(i[10])))
                cluster1EffTimeMatrix[j-1][k] = cluster1EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[12]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[15]!='' and str(int(float(i[15]))) in cluster1Machines:
                k = str(int(float(i[15])))
                cluster1EffTimeMatrix[j-1][k] = cluster1EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[17]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[20]!='' and str(int(float(i[20]))) in cluster1Machines:
                k = str(int(float(i[20])))
                cluster1EffTimeMatrix[j-1][k] = cluster1EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[22]), maxSetupForOrder)*probForEachMachine[j-1][k]


print("\n----------------------------------------------------Effective Processing time (in hours/unit) for each part on cluster 1 machines-------------------------------------------\n")
trialDfQ4a = pd.DataFrame(cluster1EffTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4a['Order'] = ordersC
trialDfQ4a.insert(0, 'Order', trialDfQ4a.pop('Order'))
trialDfQ4a.set_index(['Order'])
print(trialDfQ4a)
#trialDfQ4a.to_excel("Q4) Cluster_1_Weighted_Mean_Effective_processing_Time.xlsx")

print("\n\n")

dataOfC1 = []
for i in trialDfQ4a:
    if i != 'Order':
        for j in trialDfQ4a[trialDfQ4a[i]>0][i]:
            dataOfC1.append(j)
cluster1MeanEffProcTime = np.mean(dataOfC1)
cluster1VarEffProcTime = np.var(dataOfC1)
cluster1Ce2 = cluster1VarEffProcTime/cluster1MeanEffProcTime**2



print("Mean Effective Processing time (in hours/unit) for Cluster 1 : ", cluster1MeanEffProcTime)
print("Variance for Effective Processing time (in hours/unit) for Cluster 1 : ", cluster1VarEffProcTime)
print("Ce2 for cluster 1 : ", cluster1Ce2 )



cluster1CycleTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
        if i[5]!='' and str(int(float(i[5]))) in cluster1Machines:
            j = str(int(float(i[5])))
            cluster1CycleTimeMatrix[int(i[0])-1][j] = cluster1CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[7]), float(i[3]))
           
           
        if i[10]!='' and str(int(float(i[10]))) in cluster1Machines:
            j = str(int(float(i[10])))
            cluster1CycleTimeMatrix[int(i[0])-1][j] = cluster1CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[12]), float(i[3]))
           
        if i[15]!='' and str(int(float(i[15]))) in cluster1Machines:
            j = str(int(float(i[15])))
            cluster1CycleTimeMatrix[int(i[0])-1][j] = cluster1CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[17]), float(i[3]))
           
        if i[20]!='' and str(int(float(i[20]))) in cluster1Machines:
            j = str(int(float(i[20])))
            cluster1CycleTimeMatrix[int(i[0])-1][j] = cluster1CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[22]), float(i[3]))
#def cycleTimeForCell(u, m, te, c, s, t):

    
print("\n-----------------------------------------Cycle time (in hours/unit) for each part on cluster 1 -------------------------------------------\n")
trialDfQ4a1 = pd.DataFrame(cluster1CycleTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4a1['Order'] = ordersC
trialDfQ4a1.insert(0, 'Order', trialDfQ4a1.pop('Order'))
trialDfQ4a1.set_index(['Order'])
print(trialDfQ4a1)
#trialDfQ4a1.to_excel("Q4) Cluster_1_Cycle_time.xlsx")

print("\n\n")










cluster2EffTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]



with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0]) in cluster2Orders:
            j = int(i[0])
            maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
            if i[5]!='' and str(int(float(i[5]))) in cluster2Machines:
                k = str(int(float(i[5])))
                cluster2EffTimeMatrix[j-1][k] = cluster2EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[7]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[10]!='' and str(int(float(i[10]))) in cluster2Machines:
                k = str(int(float(i[10])))
                cluster2EffTimeMatrix[j-1][k] = cluster2EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[12]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[15]!='' and str(int(float(i[15]))) in cluster2Machines:
                k = str(int(float(i[15])))
                cluster2EffTimeMatrix[j-1][k] = cluster2EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[17]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[20]!='' and str(int(float(i[20]))) in cluster2Machines:
                k = str(int(float(i[20])))
                cluster2EffTimeMatrix[j-1][k] = cluster2EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[22]), maxSetupForOrder)*probForEachMachine[j-1][k]


print("\n----------------------------------------------------Effective Processing time (in hours/unit) for each part on cluster 2 machines-------------------------------------------\n")
trialDfQ4b = pd.DataFrame(cluster2EffTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4b['Order'] = ordersC
trialDfQ4b.insert(0, 'Order', trialDfQ4b.pop('Order'))
trialDfQ4b.set_index(['Order'])
print(trialDfQ4b)
#trialDfQ4b.to_excel("Q4) Cluster_2_Weighted_Mean_Effective_processing_Time.xlsx")

print("\n\n")

dataOfC2 = []
for i in trialDfQ4b:
    if i != 'Order':
        for j in trialDfQ4b[trialDfQ4b[i]>0][i]:
            dataOfC2.append(j)
cluster2MeanEffProcTime = np.mean(dataOfC2)
cluster2VarEffProcTime = np.var(dataOfC2)
cluster2Ce2 = cluster2VarEffProcTime/cluster2MeanEffProcTime**2



print("Mean Effective Processing time (in hours/unit) for Cluster 2 : ", cluster2MeanEffProcTime)
print("Variance for Effective Processing time (in hours/unit) for Cluster 2 : ", cluster2VarEffProcTime)
print("Ce2 for cluster 1 : ", cluster2Ce2 )



cluster2CycleTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
        if i[5]!='' and str(int(float(i[5]))) in cluster2Machines:
            j = str(int(float(i[5])))
            cluster2CycleTimeMatrix[int(i[0])-1][j] = cluster2CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[7]), float(i[3]))
           
           
        if i[10]!='' and str(int(float(i[10]))) in cluster2Machines:
            j = str(int(float(i[10])))
            cluster2CycleTimeMatrix[int(i[0])-1][j] = cluster2CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[12]), float(i[3]))
           
        if i[15]!='' and str(int(float(i[15]))) in cluster2Machines:
            j = str(int(float(i[15])))
            cluster2CycleTimeMatrix[int(i[0])-1][j] = cluster2CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[17]), float(i[3]))
           
        if i[20]!='' and str(int(float(i[20]))) in cluster2Machines:
            j = str(int(float(i[20])))
            cluster2CycleTimeMatrix[int(i[0])-1][j] = cluster2CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[22]), float(i[3]))
#def cycleTimeForCell(u, m, te, c, s, t):

    
print("\n-----------------------------------------Cycle time (in hours/unit) time for each part on cluster 2 -------------------------------------------\n")
trialDfQ4b1 = pd.DataFrame(cluster2CycleTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4b1['Order'] = ordersC
trialDfQ4b1.insert(0, 'Order', trialDfQ4b1.pop('Order'))
trialDfQ4b1.set_index(['Order'])
print(trialDfQ4b1)
#trialDfQ4b1.to_excel("Q4) Cluster_2_Cycle_time.xlsx")

print("\n\n")







cluster3EffTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]



with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        if i[0]!='' and int(i[0]) in cluster3Orders:
            j = int(i[0])
            maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
            if i[5]!='' and str(int(float(i[5]))) in cluster3Machines:
                k = str(int(float(i[5])))
                cluster3EffTimeMatrix[j-1][k] = cluster3EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[7]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[10]!='' and str(int(float(i[10]))) in cluster3Machines:
                k = str(int(float(i[10])))
                cluster3EffTimeMatrix[j-1][k] = cluster3EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[12]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[15]!='' and str(int(float(i[15]))) in cluster3Machines:
                k = str(int(float(i[15])))
                cluster3EffTimeMatrix[j-1][k] = cluster3EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[17]), maxSetupForOrder)*probForEachMachine[j-1][k]
                
            if i[20]!='' and str(int(float(i[20]))) in cluster3Machines:
                k = str(int(float(i[20])))
                cluster3EffTimeMatrix[j-1][k] = cluster3EffTimeMatrix[j-1][k] + effProcTime(float(i[3]), float(i[22]), maxSetupForOrder)*probForEachMachine[j-1][k]


print("\n----------------------------------------------------Effective Processing time (in hours/unit) for each part on cluster 3 machines-------------------------------------------\n")
trialDfQ4c = pd.DataFrame(cluster3EffTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4c['Order'] = ordersC
trialDfQ4c.insert(0, 'Order', trialDfQ4c.pop('Order'))
trialDfQ4c.set_index(['Order'])
print(trialDfQ4c)
#trialDfQ4c.to_excel("Q4) Cluster_3_Weighted_Mean_Effective_processing_Time.xlsx")

print("\n\n")

dataOfC3 = []
for i in trialDfQ4c:
    if i != 'Order':
        for j in trialDfQ4c[trialDfQ4c[i]>0][i]:
            dataOfC3.append(j)
cluster3MeanEffProcTime = np.mean(dataOfC3)
cluster3VarEffProcTime = np.var(dataOfC3)
cluster3Ce2 = cluster3VarEffProcTime/cluster3MeanEffProcTime**2



print("Mean Effective Processing time (in hours/unit) for Cluster 3 : ", cluster3MeanEffProcTime)
print("Variance for Effective Processing time (in hours/unit) for Cluster 3 : ", cluster3VarEffProcTime)
print("Ce2 for cluster 1 : ", cluster3Ce2 )



cluster3CycleTimeMatrix = [{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0},
{"100" : 0, "101" : 0, "103" : 0, "104" : 0, "105" : 0, "200" : 0, "201" : 0, "202" : 0, "203" : 0, "300" : 0, "302" : 0}]


with open(fileP, "r") as csvFile:
    content = csv.reader(csvFile)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    next(content)
    for i in content:
        maxSetupForOrder = getMaxSetupTimeForOrder(str(int(float(i[5]))), float(i[6]), str(int(float(i[10]))), float(i[11]), str(int(float(i[15]))), float(i[16]), str(int(float(i[20]))), float(i[21]))
        if i[5]!='' and str(int(float(i[5]))) in cluster3Machines:
            j = str(int(float(i[5])))
            cluster3CycleTimeMatrix[int(i[0])-1][j] = cluster3CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[7]), float(i[3]))
           
           
        if i[10]!='' and str(int(float(i[10]))) in cluster3Machines:
            j = str(int(float(i[10])))
            cluster3CycleTimeMatrix[int(i[0])-1][j] = cluster3CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[12]), float(i[3]))
           
        if i[15]!='' and str(int(float(i[15]))) in cluster3Machines:
            j = str(int(float(i[15])))
            cluster3CycleTimeMatrix[int(i[0])-1][j] = cluster3CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[17]), float(i[3]))
           
        if i[20]!='' and str(int(float(i[20]))) in cluster3Machines:
            j = str(int(float(i[20])))
            cluster3CycleTimeMatrix[int(i[0])-1][j] = cluster3CycleTimeMatrix[int(i[0])-1][j] + cycleTimeForCell(newMachineUtilization[j], mNumbers[j], cluster1MeanEffProcTime, cluster1Ce2, maxSetupForOrder, float(i[22]), float(i[3]))
#def cycleTimeForCell(u, m, te, c, s, t):

    
print("\n-----------------------------------------Cycle time (in hours/unit) for each part on cluster 3 -------------------------------------------\n")
trialDfQ4c1 = pd.DataFrame(cluster3CycleTimeMatrix)
ordersC = list(range(1, 31))
trialDfQ4c1['Order'] = ordersC
trialDfQ4c1.insert(0, 'Order', trialDfQ4c1.pop('Order'))
trialDfQ4c1.set_index(['Order'])
print(trialDfQ4c1)
#trialDfQ4c1.to_excel("Q4) Cluster_3_Cycle_time.xlsx")

print("\n\n")